import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class App3 {
	public static void main(String[] args) {
		String test = "1+2*3+(4*5+6)*7";
		String ret = expChange(test);
		System.out.println(ret);
	}
	
	public static String expChange(String strInExp) {
		List<String> input = transform(strInExp);
		List<String> output = getSuffixExp(input);
		String result = "";
		for (String str : output) {
			result += str;
			result += " ";
		}
		
		if (result.length() > 0) {
			result = result.substring(0, result.length() - 1);
		}
		
		return result;
	}
	
	public static List<String> transform(String strInExp) {
		List<String> result = new ArrayList<String>();
		String tmp = strInExp.replaceAll("\\+", " + ");
		tmp = tmp.replaceAll("-", " - ");
		tmp = tmp.replaceAll("\\*", " * ");
		tmp = tmp.replaceAll("/", " / ");
		tmp = tmp.replaceAll("\\(", " ( ");
		tmp = tmp.replaceAll("\\)", " ) ");
		
		String[] strs = tmp.split(" ");
		for (String str : strs) {
			if (!str.equals("")) {
				result.add(str);
			}
		}
		
		return result;
	}

	public static List<String> getSuffixExp(List<String> input) {
		List<String> result = new ArrayList<String>();
		LinkedList<String> stack = new LinkedList<String>();
		for (String str : input) {
			if (isOperator(str)) {
				if (str.equals("(")) {
					stack.push(str);
				} else if (str.equals(")")) {
					String top = "";
					while (!stack.isEmpty()) {
						top = stack.pop();
						if (top.equals("(")) {
							break;
						}
						result.add(top);
					}
				} else {
					while (!stack.isEmpty()) {
						String top = stack.peek();
						if (top.equals("(")) {
							break;
						}
						if (getPriority(top) >= getPriority(str)) {
							stack.pop();
							result.add(top);
						} else {
							break;
						}
					}
					stack.push(str);
				}
			} else {
				result.add(str);
			}
		}
		
		while (!stack.isEmpty()) {
			String tmp = stack.pop();
			result.add(tmp);
		}
		
		return result;
	}
	
	public static boolean isOperator(String str) {
		if (str.equals("+") || str.equals("-")
				|| str.equals("*") || str.equals("/")
				|| str.equals("(") || str.equals(")")) {
			return true;
		} else {
			return false;
		}
			
	}
	
	private static int getPriority(String str) {
		if (str.equals("+") || str.equals("-")) {
			return 1;
		} else if (str.equals("*") || str.equals("/")) {
			return 2;
		} else {
			return 3;
		}
	}
}
